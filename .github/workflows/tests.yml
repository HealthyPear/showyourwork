name: tests

on:
  push:
    branches:
      - main
  pull_request:
  pull_request_target:

jobs:
  approve:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target'
    steps:
      - name: Approve pull request workflow run
        run: echo "For security reasons, all pull requests need to be approved first before running any automated CI."

  unit:
    runs-on: ubuntu-latest
    name: Run unit tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up python
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.9"

      - name: Install showyourwork
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[tests]"

      - name: Run tests
        shell: bash -l {0}
        run: python -m pytest tests/unit

      - name: Publish tests
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "junit/*.xml"

  integration:
    runs-on: ubuntu-latest
    name: Run integration tests
    concurrency: showyourwork
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up python
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.9"

      - name: Install showyourwork
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[tests]"

      - name: Run tests (skpping remote)
        if: ${{ github.event_name != 'push' || github.repository != 'showyourwork/showyourwork' }}
        shell: bash -l {0}
        run: python -m pytest tests/integration

      - name: Run tests (including remote)
        if: ${{ github.event_name == 'push' && github.repository == 'showyourwork/showyourwork' }}
        shell: bash -l {0}
        run: python -m pytest --remote tests/integration
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_TOKEN }}
          SANDBOX_TOKEN: ${{ secrets.SANDBOX_TOKEN }}
          OVERLEAF_EMAIL: ${{ secrets.OVERLEAF_EMAIL }}
          OVERLEAF_PASSWORD: ${{ secrets.OVERLEAF_PASSWORD }}
          GH_API_KEY: ${{ secrets.GH_API_KEY }}

      - name: Publish tests
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "junit/*.xml"

  integration-remote-pr:
    runs-on: ubuntu-latest
    name: Run remote integration tests on PR (requires approval)
    concurrency: showyourwork
    if: github.event_name == 'pull_request_target'
    needs: [approve]
    environment:
      name: Integrate Pull Request
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up python
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.9"

      - name: Install showyourwork
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[tests]"

      - name: Run tests (only remote)
        shell: bash -l {0}
        run: python -m pytest --remote -m "remote" tests/integration
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_TOKEN }}
          SANDBOX_TOKEN: ${{ secrets.SANDBOX_TOKEN }}
          OVERLEAF_EMAIL: ${{ secrets.OVERLEAF_EMAIL }}
          OVERLEAF_PASSWORD: ${{ secrets.OVERLEAF_PASSWORD }}
          GH_API_KEY: ${{ secrets.GH_API_KEY }}

      - name: Publish tests
        id: publish_tests
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "junit/*.xml"
