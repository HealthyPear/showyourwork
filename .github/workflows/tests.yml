name: tests

on:
  push:
    branches:
      - main
  pull_request:
  pull_request_target:
    types: [labeled]

jobs:
  event_file:
    name: Event file
    runs-on: ubuntu-latest
    steps:
      - name: Upload event file
        uses: actions/upload-artifact@v2
        with:
          name: Event File
          path: ${{ github.event_path }}

  unit:
    if: github.event_name != 'pull_request_target'
    runs-on: ubuntu-latest
    name: Run unit tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up python
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.9"

      - name: Install showyourwork
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[tests]"

      - name: Run tests
        shell: bash -l {0}
        run: python -m pytest tests/unit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test results (unit)
          path: |
            junit/*.xml

  integration:
    if: github.event_name != 'pull_request_target'
    runs-on: ubuntu-latest
    name: Run integration tests
    concurrency: showyourwork-integration
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up python
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.9"

      - name: Install showyourwork
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[tests]"

      - name: Run local integration tests
        shell: bash -l {0}
        run: python -m pytest tests/integration

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test results (integration)
          path: |
            junit/*.xml

  remote:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'safe to test')) }}
    runs-on: ubuntu-latest
    name: Run remote integration tests
    concurrency: showyourwork-remote
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up python
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.9"

      - name: Install showyourwork
        shell: bash -l {0}
        run: |
          python -m pip install -U pip
          python -m pip install -e ".[tests]"

      - name: Run remote integration tests
        shell: bash -l {0}
        run: python -m pytest --remote -m "remote" tests/integration
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_TOKEN }}
          SANDBOX_TOKEN: ${{ secrets.SANDBOX_TOKEN }}
          OVERLEAF_EMAIL: ${{ secrets.OVERLEAF_EMAIL }}
          OVERLEAF_PASSWORD: ${{ secrets.OVERLEAF_PASSWORD }}
          GH_API_KEY: ${{ secrets.GH_API_KEY }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test results (remote)
          path: |
            junit/*.xml
